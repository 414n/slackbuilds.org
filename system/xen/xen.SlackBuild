#!/bin/sh

# Slackware build script for xen

# Copyright 2010-2013  Mario Preksavec, Zagreb, HR
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=xen
VERSION=${VERSION:-4.3.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ $ARCH == "x86_64" ] && [ ! -f /usr/include/gnu/stubs-32.h ]; then

cat << EOF

  For a 32bit guest support 32bit libs are required to build the
  stub-domain. This is usualy done by installing multilib, but
  there is also a chance that you do not need 32bit guest support,
  so you might want to try symlinking stubs-64.h to stubs-32.h
  like this:

  # ln -s /usr/include/gnu/stubs-64.h /usr/include/gnu/stubs-32.h

EOF
  exit
fi

if [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
else
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Fix some stupid things
patch -p1 <$CWD/patches/configuration_goes_to_system_etc.diff
patch -p1 <$CWD/patches/symlinks_instead_of_hardlinks.diff
patch -p1 <$CWD/patches/remove_obsolete_udev_rules.diff

# Let's not download stuff during the build...
patch -p1 <$CWD/patches/use_already_present_ipxe.diff
cp -a $CWD/ipxe-git-9a93db3f0947484e30e753bbd61a10b17336e20e.tar.gz \
  tools/firmware/etherboot/_ipxe.tar.gz
patch -p1 <$CWD/patches/use_already_present_seabios.diff
tar -xf $CWD/seabios-git-3a28511b46f0c2af5fae1b6ed2b0c19d7913cee3.tar.gz \
  -C tools/firmware
cp -a $CWD/{lwip,zlib,newlib,pciutils,grub,gmp,tpm_emulator}-*.tar.?z* \
  $CWD/polarssl-*.tgz stubdom

./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --build=$ARCH-slackware-linux

make install-xen \
  docdir=/usr/doc/$PRGNAM-$VERSION \
  DOCDIR=/usr/doc/$PRGNAM-$VERSION \
  mandir=/usr/man \
  MANDIR=/usr/man \
  DESTDIR=$PKG
make install-tools \
  docdir=/usr/doc/$PRGNAM-$VERSION \
  DOCDIR=/usr/doc/$PRGNAM-$VERSION \
  mandir=/usr/man \
  MANDIR=/usr/man \
  DESTDIR=$PKG
make install-stubdom \
  docdir=/usr/doc/$PRGNAM-$VERSION \
  DOCDIR=/usr/doc/$PRGNAM-$VERSION \
  mandir=/usr/man \
  MANDIR=/usr/man \
  DESTDIR=$PKG
make install-docs \
  docdir=/usr/doc/$PRGNAM-$VERSION \
  DOCDIR=/usr/doc/$PRGNAM-$VERSION \
  mandir=/usr/man \
  MANDIR=/usr/man \
  DESTDIR=$PKG

# Remove useless symlinks in boot/
find $PKG/boot/ -type l -a -name "xen-*" -exec rm -f {} \; 2>/dev/null || true

# Move from SYSV to BSD init scripts
mv $PKG/etc/rc.d/init.d/xen-watchdog $PKG/etc/rc.d/rc.xen-watchdog.new
mv $PKG/etc/rc.d/init.d/xencommons $PKG/etc/rc.d/rc.xencommons.new
mv $PKG/etc/rc.d/init.d/xend $PKG/etc/rc.d/rc.xend.new
mv $PKG/etc/rc.d/init.d/xendomains $PKG/etc/rc.d/rc.xendomains.new

# Fully qualified paths are needed for /etc/rc.d/rc.local_shutdown
#sed -i 's:\(^[[:space:]]*\)xend :\1/usr/sbin/xend : ' $PKG/etc/rc.d/rc.xend.new
#sed -i 's:CMD=x\([m|l]\):CMD=/usr/sbin/x\1:' $PKG/etc/rc.d/rc.xendomains.new

# Put udev rules files in the right place
mkdir -p $PKG/lib/udev/rules.d
mv $PKG/etc/udev/rules.d/xen*.rules $PKG/lib/udev/rules.d/

# Remove empty directories
rmdir $PKG/etc/{rc.d/init.d,udev/rules.d,udev}
# Only if they are really empty
#rmdir --ignore-fail-on-non-empty $PKG/usr/doc/$PRGNAM-$VERSION/{pdf,ps}

# Append .new to config files
for i in $PKG/etc/xen/{*.conf,*.sxp,*.xml} ; do mv $i $i.new ; done
mv $PKG/etc/qemu/target-x86_64.conf $PKG/etc/qemu/target-x86_64.conf.new
mv $PKG/etc/default/xencommons $PKG/etc/default/xencommons.new
mv $PKG/etc/default/xendomains $PKG/etc/default/xendomains.new

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

cp -a COPYING MAINTAINERS README $CWD/{dom0,domU} $PKG/usr/doc/$PRGNAM-$VERSION
chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION/{dom0,domU}
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
cat $CWD/README.SLACKWARE > $PKG/usr/doc/$PRGNAM-$VERSION/README.SLACKWARE

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
